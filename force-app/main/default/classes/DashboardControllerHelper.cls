PUBLIC WITH SHARING CLASS DASHBOARDCONTROLLERHELPER {
    
    PUBLIC CLASS DASHBOARDCONTROLLERHELPEREXCEPTION EXTENDS EXCEPTION {}

    PUBLIC FINAL STATIC STRING GROUP_LABEL_ISSUES = 'ISSUES';
    PUBLIC FINAL STATIC STRING GROUP_LABEL_TECH_DEBT = 'TECHNICAL DEBT';
    FINAL STATIC STRING CHART_LABEL_SENSITIVE = 'SENSITIVE';
    FINAL STATIC STRING CHART_LABEL_EXTRA_SENSITIVE = 'EXTRA SENSITIVE';
    FINAL STATIC STRING CHART_LABEL_PRIVATE = 'PRIVATE';
    PUBLIC FINAL STATIC STRING CHART_NAME_IBP = 'ISSUES BY BEST PRACTICES';
    PUBLIC FINAL STATIC STRING CHART_NAME_EOI = 'EVOLUTION OF ISSUES';
    PUBLIC FINAL STATIC STRING CHART_NAME_IIA = 'ISSUES BY IMPACT AREA';
    PUBLIC FINAL STATIC STRING CHART_NAME_IDP = 'ISSUES DATA PRIVACY';
    PUBLIC FINAL STATIC STRING CHART_NAME_CE = 'CONFIGURATION ELEMENTS';
    PUBLIC FINAL STATIC STRING CHART_NAME_IBS = 'ISSUES BY SEVERITY';
    FINAL STATIC STRING MSG_NO_NEW_DATA = ' THE DATA IS UP TO DATE. NO NEW SCANS AVAILABLE.';
    FINAL STATIC STRING MSG_OK = 'OK';
    FINAL STATIC STRING MSG_EXCEPTION_CREATE_DASHBOARD_DATA = 'CURRENT USER DOES NOT HAVE RIGHTS TO CREATE DASHBOARD_DATA__C OBJECT.';
    FINAL STATIC STRING MSG_EXCEPTION_CREATE_DATASET = 'CURRENT USER DOES NOT HAVE RIGHTS TO CREATE DATASET__C OBJECT.';
    FINAL STATIC STRING MSG_EXCEPTION_CREATE_CHART = 'CURRENT USER DOES NOT HAVE RIGHTS TO CREATE CHART__C OBJECT.';
    FINAL STATIC STRING MSG_EXCEPTION_NO_SCANS = 'NO SUCCESSFUL SCANS FOUND FOR THIS ORG. PLEASE TRIGGER SCAN FOR THIS ORG TO DISPLAY THE DASHBOARD DATA.';
    
    DASHBOARD_DATA__C DASHBOARDNUMBERS;
    STRING INSTANCEID;
    QUALITYCLOUDSSETTINGS__MDT SETTINGS;
    INTEGER SCANSHORTID;
    HTTP HTTP;
    LIST<DATASET__C> DATASETSTOINSERT;    
    LIST <ISSUESCOMPACTJSON2APEX.DATA> ISSUESCOMPACTDATA;    
    LIST <ISSUESCOMPACTJSON2APEX.DATA> TECHDEBTCOMPACTDATA;
    LIST <DATADATAJSON2APEX.DATA_Z> ISSUESBYSEVERITYAREABPDATA;
    LIST <DATADATAJSON2APEX.DATA> CONFELEMENTSDATA;
    ISSUESCOMPACTJSON2APEX DATAPRIVACY;
    
    PRIVATE HTTPREQUEST CREATEREQUEST(){
        HTTPREQUEST REQ = NEW HTTPREQUEST();        
        REQ.SETHEADER('ACCEPT', '*/*');
        REQ.SETHEADER('AUTHORIZATION', 'BEARER '+ CONTROLLERHELPERQC.GETAPIKEY());                
        REQ.SETMETHOD('GET');
        REQ.SETHEADER('CLIENT-NAME', 'GENERICHTTPCLIENT');
        RETURN REQ;
    }
    
    PRIVATE HTTPRESPONSE CALLLASTSCANINFO(HTTPREQUEST REQ){
        REQ.SETENDPOINT(SETTINGS.API_ENDPOINT__C + '/API/'  + SETTINGS.API_VERSION__C + '/SCAN?FILTER[URL]=' +  INSTANCEID +  '&PAGE[SIZE]=1&PAGE[NUMBER]=1&FILTER[STATUS]=LOADED&FILTER[SCAN_TYPE]=0');
        RETURN HTTP.SEND(REQ);
    }
    
    PRIVATE HTTPRESPONSE CALLINSTANCEINFO(HTTPREQUEST REQ){
        REQ.SETENDPOINT(SETTINGS.API_ENDPOINT__C + '/API/'  + SETTINGS.API_VERSION__C + '/SALESFORCE-INSTANCE/' +  INSTANCEID);
        RETURN HTTP.SEND(REQ);
    }
    
    PRIVATE HTTPRESPONSE CALLCUSTVSCONFIGCOMPACT(HTTPREQUEST REQ){
        REQ.SETENDPOINT(SETTINGS.API_ENDPOINT_WIDGETS__C + SETTINGS.API_VERSION_WIDGETS__C + '/CUST-VS-CONFIG-COMPACT/' + SCANSHORTID);
        RETURN HTTP.SEND(REQ);
    }
    
    PRIVATE HTTPRESPONSE CALLISSUESOVERTIMECOMPACT (HTTPREQUEST REQ){
        REQ.SETENDPOINT(SETTINGS.API_ENDPOINT_WIDGETS__C + SETTINGS.API_VERSION_WIDGETS__C + '/ISSUES-OVER-TIME-COMPACT/' + SCANSHORTID);
        RETURN HTTP.SEND(REQ);
    }
    
    PRIVATE HTTPRESPONSE CALLTECHDEBTCOMPACT (HTTPREQUEST REQ){
        REQ.SETENDPOINT(SETTINGS.API_ENDPOINT_WIDGETS__C + SETTINGS.API_VERSION_WIDGETS__C + '/TECH-DEBT-COMPACT/' + SCANSHORTID);
        RETURN HTTP.SEND(REQ);
    }
    
    PRIVATE HTTPRESPONSE CALLISSUESBYSCAN (HTTPREQUEST REQ){
        REQ.SETENDPOINT(SETTINGS.API_ENDPOINT_WIDGETS__C + SETTINGS.API_VERSION_WIDGETS__C + '/ISSUES-BY-SCAN/' + SCANSHORTID);
        RETURN HTTP.SEND(REQ);
    }
    
    PRIVATE HTTPRESPONSE CALLCESBYTYPE (HTTPREQUEST REQ){
        REQ.SETENDPOINT(SETTINGS.API_ENDPOINT_WIDGETS__C + SETTINGS.API_VERSION_WIDGETS__C + '/CES-BY-TYPE/' + SCANSHORTID + '?PROVIDERID=2');
        RETURN HTTP.SEND(REQ);
    }
    
    PRIVATE HTTPRESPONSE CALLDATAPRIVACYCOMPACT (HTTPREQUEST REQ){
        REQ.SETENDPOINT(SETTINGS.API_ENDPOINT_WIDGETS__C + SETTINGS.API_VERSION_WIDGETS__C + '/DATA-PRIVACY-COMPACT/' + SCANSHORTID);
        RETURN HTTP.SEND(REQ);
    }
    
    PRIVATE VOID ADDLASTSCANINFOTODASHBOARDNUMBERS (HTTPRESPONSE RES){
        DASHBOARDNUMBERS = NEW DASHBOARD_DATA__C();
        MAP<STRING, OBJECT> RESULTS = (MAP<STRING, OBJECT>) JSON.DESERIALIZEUNTYPED(RES.GETBODY());
        LIST< OBJECT> DATALIST = (LIST<OBJECT>) RESULTS.GET('DATA');
        IF (DATALIST.ISEMPTY()) {
            SYSTEM.DEBUG(LOGGINGLEVEL.ERROR, RES.GETBODY());
            THROW NEW DASHBOARDCONTROLLERHELPEREXCEPTION(MSG_EXCEPTION_NO_SCANS); 
        }    
        MAP<STRING,OBJECT> DATA =  (MAP<STRING,OBJECT>) DATALIST[0];
        MAP<STRING,OBJECT> ATTRIBUTES = (MAP<STRING,OBJECT>) DATA.GET('ATTRIBUTES');
        
        DASHBOARDNUMBERS.TOTAL_ISSUES__C = (INTEGER) ATTRIBUTES.GET('NUMBER-OF-ISSUES');
        IF((STRING) ATTRIBUTES.GET('ISSUES-VARIATION') != NULL){
            DASHBOARDNUMBERS.TOTAL_ISSUES_VARIATION__C = DECIMAL.VALUEOF( (STRING) ATTRIBUTES.GET('ISSUES-VARIATION'));
        }ELSE{
            DASHBOARDNUMBERS.TOTAL_ISSUES_VARIATION__C = 0;
        }
        IF((STRING) ATTRIBUTES.GET('TECHNICAL-DEBT-VARIATION')!= NULL){
            DASHBOARDNUMBERS.TECHNICAL_DEBT_VARIATION__C = DECIMAL.VALUEOF( (STRING) ATTRIBUTES.GET('TECHNICAL-DEBT-VARIATION')); 
        }ELSE{
            DASHBOARDNUMBERS.TECHNICAL_DEBT_VARIATION__C = 0; 
        }
        IF((STRING)ATTRIBUTES.GET('QUALITY-OF-CLOUD-VARIATION')!= NULL){
            DASHBOARDNUMBERS.QOC_VARIATION__C = DECIMAL.VALUEOF( (STRING)ATTRIBUTES.GET('QUALITY-OF-CLOUD-VARIATION')); 
        }ELSE{
            DASHBOARDNUMBERS.QOC_VARIATION__C = 0; 
        }
        
        DASHBOARDNUMBERS.TECHNICAL_DEBT__C = DECIMAL.VALUEOF( (STRING) ATTRIBUTES.GET('TECHNICAL-DEBT')); 
        DASHBOARDNUMBERS.CODE_CHANGES_ISSUES_RATIO__C =  DECIMAL.VALUEOF( (STRING) ATTRIBUTES.GET('CODE-CHANGES-ISSUES-RATIO'));
        DASHBOARDNUMBERS.QOC__C = DECIMAL.VALUEOF( (STRING)ATTRIBUTES.GET('QUALITY-OF-CLOUD'));
        DASHBOARDNUMBERS.SCAN_DATE__C = DATETIME.VALUEOF( (STRING)ATTRIBUTES.GET('SCAN-DATE'));
        DASHBOARDNUMBERS.SCAN_ID_EXTERNAL__C = (STRING) DATA.GET('ID');
        DASHBOARDNUMBERS.ORG_URL__C = (STRING)ATTRIBUTES.GET('URL');
        DASHBOARDNUMBERS.ORG_EDITION__C = (STRING)ATTRIBUTES.GET('EDITION');
        DASHBOARDNUMBERS.INSTANCE_DESCRIPTION__C = (STRING)ATTRIBUTES.GET('TARGET');
        
        SCANSHORTID = (INTEGER) ATTRIBUTES.GET('SHORT-ID');
    }
    
    PRIVATE VOID ADDORGIDENVIRONMENTTODASHBOARDNUMBERS (HTTPRESPONSE RES){
        MAP<STRING, OBJECT> INSTRESULTS = (MAP<STRING, OBJECT>) JSON.DESERIALIZEUNTYPED(RES.GETBODY());
        MAP<STRING, OBJECT> INSTDATA = (MAP<STRING, OBJECT>)INSTRESULTS.GET('DATA');
        MAP<STRING, OBJECT> ATTRIB = (MAP<STRING, OBJECT>)INSTDATA.GET('ATTRIBUTES');
        DASHBOARDNUMBERS.ORG_ID__C = (STRING) ATTRIB.GET('ORG-ID');
        DASHBOARDNUMBERS.ENVIRONMENT__C = (STRING) ATTRIB.GET('ENVIRONMENT'); 
    }
    
    PRIVATE VOID ADDCUSTOMIZATIONRATIOTODASHBOARDNUMBERS (HTTPRESPONSE RES){
        ISSUESCOMPACTJSON2APEX CUSTOMVSCONFIG = ISSUESCOMPACTJSON2APEX.PARSE(RES.GETBODY());    
        DASHBOARDNUMBERS.CUSTOMIZATION_RATIO__C = DECIMAL.VALUEOF( CUSTOMVSCONFIG.VALUE );
    }   
    
    PRIVATE VOID ADDEVOLUTIONOFISSUESTODATASETS (LIST <ISSUESCOMPACTJSON2APEX.DATA> ISSUESCOMPACTDATA, LIST <ISSUESCOMPACTJSON2APEX.DATA> TECHDEBTCOMPACTDATA, CHART__C EOICHART){
        FOR (ISSUESCOMPACTJSON2APEX.DATA ISSUECD : ISSUESCOMPACTDATA){
            DATASET__C TEMPDATASET = NEW DATASET__C ();
            TEMPDATASET.CHART__C = EOICHART.ID;
            TEMPDATASET.GROUP_LABEL__C = GROUP_LABEL_ISSUES;
            TEMPDATASET.LABEL__C = ISSUECD.LABEL;
            TEMPDATASET.VALUE__C = DECIMAL.VALUEOF(ISSUECD.VALUE);
            DATASETSTOINSERT.ADD(TEMPDATASET);
        }
        
        FOR (ISSUESCOMPACTJSON2APEX.DATA TDEBT : TECHDEBTCOMPACTDATA){           
            
            DATASET__C TEMPDATASET = NEW DATASET__C ();
            TEMPDATASET.CHART__C = EOICHART.ID;
            TEMPDATASET.GROUP_LABEL__C = GROUP_LABEL_TECH_DEBT;
            TEMPDATASET.LABEL__C = TDEBT.LABEL;
            TEMPDATASET.VALUE__C = DECIMAL.VALUEOF(TDEBT.VALUE);
            DATASETSTOINSERT.ADD(TEMPDATASET);
        }  
    } 
    
    PRIVATE VOID ADDISSUESBYSEVERITYAREABPTODATASETS (LIST <DATADATAJSON2APEX.DATA_Z> ISSUESBYSEVERITYAREABPDATA, CHART__C IBSCHART, CHART__C IIACHART, CHART__C IBPCHART){
        FOR (DATADATAJSON2APEX.DATA_Z ISSUESBP : ISSUESBYSEVERITYAREABPDATA){        
            FOR (DATADATAJSON2APEX.DATA ISSUESBPDATA : ISSUESBP.DATA){
                IF (ISSUESBP.NAME == 'ISSUES BY SEVERITY'){
                    DATASET__C TEMPDATASET = CREATEDATASET(ISSUESBPDATA);
                    TEMPDATASET.CHART__C = IBSCHART.ID;
                    DATASETSTOINSERT.ADD(TEMPDATASET);
                }ELSE IF (ISSUESBP.NAME == 'ISSUES BY AREA'){
                    DATASET__C TEMPDATASET = CREATEDATASET(ISSUESBPDATA);
                    TEMPDATASET.CHART__C = IIACHART.ID;
                    DATASETSTOINSERT.ADD(TEMPDATASET);
                }ELSE IF (ISSUESBP.NAME == 'ISSUES BY BEST PRACTICE' && ISSUESBPDATA.VALUE != 0){                    
                    DATASET__C TEMPDATASET = CREATEDATASET(ISSUESBPDATA);
                    TEMPDATASET.CHART__C = IBPCHART.ID;
                    DATASETSTOINSERT.ADD(TEMPDATASET);
                }
            } 
        }
    } 
    
    PRIVATE VOID ADDCONFIGURATIONELEMENTSTODATASETS (LIST<DATADATAJSON2APEX.DATA> CONFELEMENTSDATA, CHART__C CECHART){
        FOR (DATADATAJSON2APEX.DATA CONFELEMENT : CONFELEMENTSDATA){
            IF (CONFELEMENT.VALUE != 0) {
                DATASET__C TEMPDATASET = CREATEDATASET(CONFELEMENT);
                TEMPDATASET.CHART__C = CECHART.ID;
                DATASETSTOINSERT.ADD(TEMPDATASET);
            }
        } 
    } 
    
    PRIVATE VOID ADDISSUESDATAPRIVACYTODATASETS (CHART__C IDPCHART, ISSUESCOMPACTJSON2APEX DATAPRIVACY){
        DATASET__C TEMPDATASET = NEW DATASET__C ();
        TEMPDATASET.CHART__C = IDPCHART.ID;
        TEMPDATASET.LABEL__C = CHART_LABEL_SENSITIVE;
        TEMPDATASET.VALUE__C = DATAPRIVACY.SENSITIVE;
        DATASETSTOINSERT.ADD(TEMPDATASET);
        TEMPDATASET = NEW DATASET__C ();
        TEMPDATASET.CHART__C = IDPCHART.ID;
        TEMPDATASET.LABEL__C = CHART_LABEL_EXTRA_SENSITIVE;
        TEMPDATASET.VALUE__C = DATAPRIVACY.EXTRASENSITIVE;
        DATASETSTOINSERT.ADD(TEMPDATASET);
        TEMPDATASET = NEW DATASET__C ();
        TEMPDATASET.CHART__C = IDPCHART.ID;
        TEMPDATASET.LABEL__C = CHART_LABEL_PRIVATE;
        TEMPDATASET.VALUE__C = DATAPRIVACY.PRIVATEISSUES;
        DATASETSTOINSERT.ADD(TEMPDATASET);
    }
    
    PRIVATE VOID GETDATAFROMENDPOINTS (HTTPREQUEST REQ){
        HTTPRESPONSE RES = CALLINSTANCEINFO(REQ);
        IF (RES.GETSTATUSCODE() == 200){
            ADDORGIDENVIRONMENTTODASHBOARDNUMBERS(RES);
        } ELSE {
            THROW NEW DASHBOARDCONTROLLERHELPEREXCEPTION(RES.GETBODY());
        }
        
        RES = CALLCUSTVSCONFIGCOMPACT(REQ);
        IF (RES.GETSTATUSCODE() == 200){
            ADDCUSTOMIZATIONRATIOTODASHBOARDNUMBERS(RES);
        } ELSE {
            THROW NEW DASHBOARDCONTROLLERHELPEREXCEPTION(RES.GETBODY());  
        }
        
        RES = CALLISSUESOVERTIMECOMPACT(REQ);            
        IF (RES.GETSTATUSCODE() == 200){
            ISSUESCOMPACTDATA = ISSUESCOMPACTJSON2APEX.PARSE(RES.GETBODY())?.TREND[0]?.DATA;
        }  ELSE {
            THROW NEW DASHBOARDCONTROLLERHELPEREXCEPTION(RES.GETBODY()); 
        }
        
        RES = CALLTECHDEBTCOMPACT(REQ);
        IF (RES.GETSTATUSCODE() == 200){
            TECHDEBTCOMPACTDATA = ISSUESCOMPACTJSON2APEX.PARSE(RES.GETBODY())?.TREND[0]?.DATA;
        } ELSE {
            THROW NEW DASHBOARDCONTROLLERHELPEREXCEPTION(RES.GETBODY());  
        }
        
        RES = CALLISSUESBYSCAN(REQ);
        IF (RES.GETSTATUSCODE() == 200){  
            ISSUESBYSEVERITYAREABPDATA = DATADATAJSON2APEX.PARSE(RES.GETBODY())?.DATA;            
        } ELSE {
            THROW NEW DASHBOARDCONTROLLERHELPEREXCEPTION(RES.GETBODY());  
        }
        
        RES = CALLCESBYTYPE(REQ);
        IF (RES.GETSTATUSCODE() == 200){
            CONFELEMENTSDATA = DATADATAJSON2APEX.PARSE(RES.GETBODY())?.DATA[0]?.DATA;
        } ELSE {
            THROW NEW DASHBOARDCONTROLLERHELPEREXCEPTION(RES.GETBODY());  
        }            
        
        RES = CALLDATAPRIVACYCOMPACT(REQ);
        IF (RES.GETSTATUSCODE() == 200){
            DATAPRIVACY= ISSUESCOMPACTJSON2APEX.PARSE(RES.GETBODY());        
        } ELSE {
            THROW NEW DASHBOARDCONTROLLERHELPEREXCEPTION(RES.GETBODY());  
        } 
    }
    
    PUBLIC STRING UPDATEDATAFROMPORTAL (STRING INSTID, DATETIME LASTSCANDATE){
        INSTANCEID = INSTID;
        SETTINGS = CONTROLLERHELPERQC.GETSETTINGS();      
        HTTPREQUEST REQ = CREATEREQUEST();
        HTTP = NEW HTTP();
        HTTPRESPONSE RES = CALLLASTSCANINFO(REQ);
        IF (RES.GETSTATUSCODE() == 200){
            ADDLASTSCANINFOTODASHBOARDNUMBERS (RES);

            IF (LASTSCANDATE != NULL && DASHBOARDNUMBERS.SCAN_DATE__C != NULL && LASTSCANDATE >= DASHBOARDNUMBERS.SCAN_DATE__C) {
                RETURN MSG_NO_NEW_DATA;
            }
            GETDATAFROMENDPOINTS(REQ);
            SAVEPOINT SP = DATABASE.SETSAVEPOINT();
            TRY {
                IF (SCHEMA.SOBJECTTYPE.DASHBOARD_DATA__C.FIELDS.TOTAL_ISSUES__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DASHBOARD_DATA__C.FIELDS.TOTAL_ISSUES_VARIATION__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DASHBOARD_DATA__C.FIELDS.TECHNICAL_DEBT__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DASHBOARD_DATA__C.FIELDS.TECHNICAL_DEBT_VARIATION__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DASHBOARD_DATA__C.FIELDS.CODE_CHANGES_ISSUES_RATIO__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DASHBOARD_DATA__C.FIELDS.QOC__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DASHBOARD_DATA__C.FIELDS.QOC_VARIATION__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DASHBOARD_DATA__C.FIELDS.SCAN_DATE__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DASHBOARD_DATA__C.FIELDS.SCAN_ID_EXTERNAL__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DASHBOARD_DATA__C.FIELDS.ORG_URL__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DASHBOARD_DATA__C.FIELDS.ORG_EDITION__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DASHBOARD_DATA__C.FIELDS.INSTANCE_DESCRIPTION__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DASHBOARD_DATA__C.FIELDS.ORG_ID__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DASHBOARD_DATA__C.FIELDS.ENVIRONMENT__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DASHBOARD_DATA__C.FIELDS.CUSTOMIZATION_RATIO__C.ISCREATEABLE()   
                ) {
                    INSERT DASHBOARDNUMBERS; 
                } ELSE {
                    THROW NEW DASHBOARDCONTROLLERHELPEREXCEPTION(MSG_EXCEPTION_CREATE_DASHBOARD_DATA); 
                }
                
                CHART__C IBPCHART = NEW CHART__C();
                IBPCHART.DASHBOARD_DATA__C = DASHBOARDNUMBERS.ID;
                IBPCHART.NAME = CHART_NAME_IBP;
                
                CHART__C EOICHART = NEW CHART__C();
                EOICHART.DASHBOARD_DATA__C = DASHBOARDNUMBERS.ID;
                EOICHART.NAME = CHART_NAME_EOI;
                
                CHART__C IIACHART = NEW CHART__C();
                IIACHART.DASHBOARD_DATA__C = DASHBOARDNUMBERS.ID;
                IIACHART.NAME = CHART_NAME_IIA;
                
                CHART__C IDPCHART = NEW CHART__C();
                IDPCHART.DASHBOARD_DATA__C = DASHBOARDNUMBERS.ID;
                IDPCHART.NAME = CHART_NAME_IDP;
                
                CHART__C CECHART = NEW CHART__C();
                CECHART.DASHBOARD_DATA__C = DASHBOARDNUMBERS.ID;
                CECHART.NAME = CHART_NAME_CE;
                
                CHART__C IBSCHART = NEW CHART__C();
                IBSCHART.DASHBOARD_DATA__C = DASHBOARDNUMBERS.ID;
                IBSCHART.NAME = CHART_NAME_IBS;
                
                LIST<CHART__C> CHARTSTOINSERT = NEW LIST<CHART__C> {IBPCHART, EOICHART, IIACHART, IDPCHART, CECHART, IBSCHART};
                 
                IF (SCHEMA.SOBJECTTYPE.CHART__C.ISCREATEABLE()) {                    
                    INSERT CHARTSTOINSERT;
                } ELSE {
                    THROW NEW DASHBOARDCONTROLLERHELPEREXCEPTION(MSG_EXCEPTION_CREATE_CHART); 
                }
                
                DATASETSTOINSERT = NEW LIST<DATASET__C>();   
                ADDEVOLUTIONOFISSUESTODATASETS (ISSUESCOMPACTDATA,  TECHDEBTCOMPACTDATA, EOICHART);
                ADDISSUESBYSEVERITYAREABPTODATASETS (ISSUESBYSEVERITYAREABPDATA, IBSCHART, IIACHART, IBPCHART);
                ADDCONFIGURATIONELEMENTSTODATASETS ( CONFELEMENTSDATA, CECHART);
                ADDISSUESDATAPRIVACYTODATASETS ( IDPCHART,  DATAPRIVACY);                
                
                IF (SCHEMA.SOBJECTTYPE.DATASET__C.FIELDS.CHART__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DATASET__C.FIELDS.LABEL__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DATASET__C.FIELDS.VALUE__C.ISCREATEABLE()
                    && SCHEMA.SOBJECTTYPE.DATASET__C.FIELDS.GROUP_LABEL__C.ISCREATEABLE()
                ) {
                    INSERT DATASETSTOINSERT; 
                } ELSE {
                    THROW NEW DASHBOARDCONTROLLERHELPEREXCEPTION(MSG_EXCEPTION_CREATE_DATASET); 
                }
                RETURN MSG_OK;
            } CATCH (EXCEPTION E) {
                SYSTEM.DEBUG(LOGGINGLEVEL.ERROR, E.GETSTACKTRACESTRING()); 
                DATABASE.ROLLBACK(SP);
                THROW NEW DASHBOARDCONTROLLERHELPEREXCEPTION(E); 
            }
                       
        } ELSE {
            THROW NEW DASHBOARDCONTROLLERHELPEREXCEPTION(RES.GETBODY()); 
        }
    }
    
    PRIVATE DATASET__C CREATEDATASET (DATADATAJSON2APEX.DATA DATAELEMENT){
        DATASET__C TEMPDATASET = NEW DATASET__C ();
        TEMPDATASET.LABEL__C = DATAELEMENT?.LABEL;
        TEMPDATASET.VALUE__C = DECIMAL.VALUEOF(DATAELEMENT?.VALUE);
        RETURN TEMPDATASET;
    }  
}