@ISTEST
CLASS INSTANCESCONTROLLERTEST {
    
    PRIVATE CLASS MOCKOK IMPLEMENTS HTTPCALLOUTMOCK {
        PUBLIC HTTPRESPONSE RESPOND(HTTPREQUEST REQ) {
            IF (REQ.GETENDPOINT().ENDSWITH('/SALESFORCE-INSTANCE')) {
                HTTPRESPONSE RES = NEW HTTPRESPONSE();
                RES.SETBODY('{}');
                RES.SETSTATUSCODE(201);
                RETURN RES;
            } ELSE IF (REQ.GETENDPOINT().ENDSWITH('/SALESFORCE-INSTANCE/123')) {
                HTTPRESPONSE RES = NEW HTTPRESPONSE();
                RES.SETBODY('{"DATA":{"TYPE":"SALESFORCE-INSTANCE","ID":"123",'+
                            '"ATTRIBUTES":{"DESCRIPTION":"22","ENVIRONMENT-ID":1,'+
                            '"ENVIRONMENT":"DEVELOPMENT","SERVICE-NAME":"SALESFORCE",'+
                            '"URL":"HTTPS://QUALITYCLOUDS4-DEV-ED--C.VISUALFORCE.COM",'+
                            '"LOGIN-URL":"HTTPS://QUALITYCLOUDS4-DEV-ED--C.VISUALFORCE.COM",'+
                            '"LAST-SCAN-TEST-RESULT":"FAIL",'+
                            '"LAST-SCAN-TEST-DATETIME":"2021-04-28+08:18:13",'+
                            '"LAST-SCAN-TEST-DETAILS":"YOU+NEED+TO+FINISH+YOUR+INSTANCE+CONFIGURATION+BY+OBTAINING+A+SALESFORCE+OAUTH+TOKEN",'+
                            '"TARGET":"ORG","IS-FEATURE-BRANCH":FALSE,"GIT-FLAVOR-ID":NULL,'+
                            '"GIT-REPOSITORY-URL":NULL,"GIT-BRANCH":NULL,"GO-LIVE":"0000-00-00",'+
                            '"DONT-PERSIST-CREDENTIALS":FALSE,'+
                            '"SALESFORCE-LOGIN-URL":"HTTPS://QUALITYCLOUDS4-DEV-ED--C.VISUALFORCE.COM/SERVICES/OAUTH2/AUTHORIZE?'+
                            'RESPONSE_TYPE=CODE&CLIENT_ID=8DOV0M6WWS0W6JPQCFNIVLQYJL5FXTDAK1PXYEV4SPIZ8O5IZJQUUNS20EZKWPO50VAEZ5N'+
                            'XXZPUMQSC5K6YSYDHGY4RO8DLSMIJ&REDIRECT_URI=HTTPS://DEV-SERVICES.QUALITYCLOUDS.COM/SF_INSTANCE/CODE_'+
                            'CALLBACK&STATE=693&DISPLAY=POPUP&PROMPT=LOGIN&SCOPE=API%20REFRESH_TOKEN","ORG-ID":NULL,"ACTIVE":TRUE,'+
                            '"QUALITY-GATE-STATUS":NULL,"NUM-ALERTS":0},"LINKS":{"SELF":"HTTP://DEV.QUALITYCLOUDS.COM/API/V2/SALESFORCE-INSTANCE/693"}}}');
                RES.SETSTATUSCODE(200);
                RETURN RES;
            } ELSE {
                RETURN NULL;
            }
        }
    }
    PRIVATE CLASS MOCKERROR IMPLEMENTS HTTPCALLOUTMOCK {
        PUBLIC HTTPRESPONSE RESPOND(HTTPREQUEST REQ) {
            IF (REQ.GETENDPOINT().ENDSWITH('/SALESFORCE-INSTANCE')) {
                HTTPRESPONSE RES = NEW HTTPRESPONSE();
                RES.SETBODY('{}');
                RES.SETSTATUSCODE(500);
                RETURN RES;
            } ELSE IF (REQ.GETENDPOINT().ENDSWITH('/SALESFORCE-INSTANCE/123')) {
                HTTPRESPONSE RES = NEW HTTPRESPONSE();
                RES.SETBODY('{}');
                RES.SETSTATUSCODE(500);
                RETURN RES;
            } ELSE {
                RETURN NULL;
            }
        }
    }
    
    @ISTEST
    STATIC VOID GIVENSTATUS200_WHENUPDATEINSTANCES_THENOK() {
        INSTANCESCONTROLLER INSTANCECONTROLLER = NEW INSTANCESCONTROLLER();
        STATICRESOURCECALLOUTMOCK MOCK = NEW STATICRESOURCECALLOUTMOCK();
        MOCK.SETSTATICRESOURCE('INSTANCESOK');
        MOCK.SETSTATUSCODE(200);
        MOCK.SETHEADER('CONTENT-TYPE', 'APPLICATION/JSON');
        TEST.SETMOCK(HTTPCALLOUTMOCK.CLASS, MOCK);
        TEST.STARTTEST();
        INSTANCECONTROLLER.UPDATEINSTANCES();
        TEST.STOPTEST();
    }
    
    @ISTEST
    STATIC VOID GIVENNOINSTANCES_WHENUPDATEINSTANCES_THENWARNING() {
        INSTANCESCONTROLLER INSTANCECONTROLLER = NEW INSTANCESCONTROLLER();
        STATICRESOURCECALLOUTMOCK MOCK = NEW STATICRESOURCECALLOUTMOCK();
        MOCK.SETSTATICRESOURCE('INSTANCESEMPTY');
        MOCK.SETSTATUSCODE(200);
        MOCK.SETHEADER('CONTENT-TYPE', 'APPLICATION/JSON');
        
        TEST.SETMOCK(HTTPCALLOUTMOCK.CLASS, MOCK);
        TEST.STARTTEST();
        INSTANCECONTROLLER.UPDATEINSTANCES();
        TEST.STOPTEST();
        STRING EXPECTED = 'NO INSTANCES FOUND ON THE QUALITY CLOUDS PORTAL FOR THIS ACCOUNT.';
    }    
    
    
    @ISTEST
    STATIC VOID  GIVENNEWCONTROLLER_WHENOPENDETAIL_THENURLOK(){
        TEST.STARTTEST();
        INSTANCESCONTROLLER INSTANCECONTROLLER = NEW INSTANCESCONTROLLER();
        TEST.STOPTEST();
        PAGEREFERENCE EXPECTED = NEW PAGEREFERENCE('/APEX/INSTANCEDETAIL');
    }
    
    @ISTEST
    STATIC VOID GIVENPOPUP_WHENCANCEL_THENNOPOPUP(){
        INSTANCESCONTROLLER INSTANCECONTROLLER = NEW INSTANCESCONTROLLER();        
        INSTANCECONTROLLER.SHOWPOPUP = TRUE;
        TEST.STARTTEST();
        INSTANCECONTROLLER.CANCEL();
        TEST.STOPTEST();
        SYSTEM.ASSERTEQUALS(FALSE, INSTANCECONTROLLER.SHOWPOPUP);
    }
    
    @ISTEST
    STATIC VOID GIVENINSTANCE_WHENGETINSTANCES_THENINSTANCERETURNED(){
        INSTANCESCONTROLLER INSTANCECONTROLLER = NEW INSTANCESCONTROLLER();
        INSERT NEW INSTANCE__C(ID__C = '123', IS_FEATURED_BANCH__C = TRUE);
        TEST.STARTTEST();
        LIST<INSTANCE__C>  INSTANCES = INSTANCECONTROLLER.GETINSTANCES();
        TEST.STOPTEST();
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
        SYSTEM.ASSERTEQUALS(TRUE, TRUE);
    } 
    
    @ISTEST
    STATIC VOID GIVENMOCKOK_WHENCREATEPORTALINSTANCE_THENRESULTTRUE(){
        TEST.SETMOCK(HTTPCALLOUTMOCK.CLASS, NEW MOCKOK());
        INSTANCESCONTROLLER INSTANCECONTROLLER = NEW INSTANCESCONTROLLER();
        INSTANCECONTROLLER.DESCRIPTION = '123';
        MAP<STRING, STRING> KEYS = NEW MAP<STRING, STRING>();
        KEYS.PUT('CONSUMKEY','CONSUMKEYOI34KLJ34RJKR4J');
        KEYS.PUT('CONSUMSECRET', 'CONSUMSECRETJKN34KJN4RKJN34RKJN');
        TEST.STARTTEST();
        BOOLEAN RESULT = INSTANCECONTROLLER.CREATEPORTALINSTANCE(KEYS);
        TEST.STOPTEST();
        SYSTEM.ASSERTEQUALS(TRUE, RESULT);
    }
    
    @ISTEST
    STATIC VOID GIVENMOCKOK_WHENAUTHORIZE_THENCORRECTURL(){
        TEST.SETMOCK(HTTPCALLOUTMOCK.CLASS, NEW MOCKOK());
        INSTANCESCONTROLLER INSTANCECONTROLLER = NEW INSTANCESCONTROLLER();
        INSTANCECONTROLLER.ID_INST = '123';    
        TEST.STARTTEST();   
        PAGEREFERENCE RESULT = INSTANCECONTROLLER.AUTHORIZE();
        TEST.STOPTEST();
        STRING EXPECTED = 'HTTPS://QUALITYCLOUDS4-DEV-ED--C.VISUALFORCE.COM/SERVICES/OAUTH2/AUTHORIZE?'+
            'CLIENT_ID=8DOV0M6WWS0W6JPQCFNIVLQYJL5FXTDAK1PXYEV4SPIZ8O5IZJQUUNS20EZKWPO50VAEZ5NXXZPUMQSC5K6YSYDHGY4RO8DLSMIJ&'+
            'DISPLAY=POPUP&PROMPT=LOGIN&REDIRECT_URI=HTTPS%3A%2F%2FDEV-SERVICES.QUALITYCLOUDS.COM%2FSF_INSTANCE%2FCODE_CALLBACK&'+
            'RESPONSE_TYPE=CODE&STATE=693';    
        SYSTEM.ASSERTEQUALS(EXPECTED, RESULT.GETURL());
    }
       
    
    @ISTEST
    STATIC VOID GIVENMOCKERROR_WHENAUTHORIZE_THENERROR(){
        TEST.SETMOCK(HTTPCALLOUTMOCK.CLASS, NEW MOCKERROR());
        INSTANCESCONTROLLER INSTANCECONTROLLER = NEW INSTANCESCONTROLLER();
        INSTANCECONTROLLER.ID_INST = '123'; 
        TEST.STARTTEST();
        PAGEREFERENCE RESULT = INSTANCECONTROLLER.AUTHORIZE();
        TEST.STOPTEST();
        STRING EXPECTED = 'ERROR GETTING AUTHORIZATION URL. PLEASE CLOSE THIS TAB AND GET AUTHORIZATION TOKEN ON QUALITY CLOUDS PORTAL';  
        SYSTEM.ASSERTEQUALS(EXPECTED, RESULT.GETPARAMETERS().GET('MESSAGE'));
    }
    
    @ISTEST
    STATIC VOID GIVENNOMOCK_WHENCONNECTORGTOPORTAL_THENEXCEPTIONCAUGHT() { 
        
        TEST.STARTTEST();
        INSTANCESCONTROLLER INSTANCECONTROLLER = NEW INSTANCESCONTROLLER();
        INSTANCECONTROLLER.DESCRIPTION = '123';
        INSTANCECONTROLLER.CONNECTORGTOPORTAL();
        TEST.STOPTEST();
        SYSTEM.ASSERTEQUALS('TRUE', 'TRUE');
    }  
    
    @ISTEST
    STATIC VOID GIVENNOINSTANCEDESCRIPTION_WHENCONNECTORGTOPORTAL_THENERRORMESSAGE() { 
        
        TEST.STARTTEST();
        INSTANCESCONTROLLER INSTANCECONTROLLER = NEW INSTANCESCONTROLLER();
        INSTANCECONTROLLER.CONNECTORGTOPORTAL();
        TEST.STOPTEST();   
        SYSTEM.ASSERT(APEXPAGES.HASMESSAGES(APEXPAGES.SEVERITY.ERROR));     
    }  
    
    @ISTEST
    STATIC VOID APIKEYMETHODS() { 
        
        TEST.STARTTEST();
        INSTANCESCONTROLLER INSTANCECONTROLLER = NEW INSTANCESCONTROLLER();

       	INSTANCECONTROLLER.GETCHECKAPIKEY();
        INSTANCECONTROLLER.SETUP();
        
        QC_USER__C QCUSER = INSTANCESCONTROLLER.QCUSER ;
        INSTANCECONTROLLER.ADDAPIKEY();
        QC_USER__C TESTQCUSER = NEW QC_USER__C(NAME = 'TEST QC USER', USER__C = USERINFO.GETUSERID(),
                                               QC_ACTIVE__C = TRUE, QC_API_KEY_DEVELOPER__C = '12345',
                                               QC_VALID_UNTIL__C = DATE.TODAY().ADDDAYS(30),
                                               API_KEY_1__C = 'EYJ0EXAIOIJKV1QILCJHBGCIOIJSUZI1NIJ9.EYJHDWQIOIIYIIWIANRPIJOINDJKYJG1MTYYNJMWNJDLZJQ4OTY0ODQ0ZGJMMMFINDYXMTRHNWQZOTE3ZTY3M2YYMWQ0NZVMNZU1NTQ1NDCZMZVHMZBIZTZJZJQ1ZTKZNZEILCJPYX', 
                                               API_KEY_2__C = 'QIOJE2ODEYOTIYODEUMTU3OTQ5LCJUYMYIOJE2ODEYOTIYODEUMTU3OTUXLCJLEHAIOJE3MTI5MTQ2ODEUMTU2MDG3LCJZDWIIOIIXMDQ4IIWIC2NVCGVZIJPBINDYAXRLLW9MZNMILCJSAXZLLWNOZWNRIIWIDXBKYXRLC2V0LXNJY',
                                               API_KEY_3__C = 'W5ZIIWIZNVSBC1ZY2FUCYISIMFWCGXPY2F0AW9ULXNJYW5ZIIWIAW5ZDGFUY2VZIIWIBGLJZW5ZZXMILCJHCGKTA2V5CYISINBLZXITCMV2AWV3IIWIZMVHDHVYZWJYYW5JAC1ZY2FUCYISIMNOZWNRLW5VDGLMAWNHDGLVBNMIXX0.', 
                                               API_KEY_4__C = 'FFWMQG2FYNSLMPCIMIPKBKC0YNNAFAYMJZSTT79WENDUQHUOIGXKHOPSXGN1EQFBAEPOO27XMZZB1-TMFH2IMAWWIO07FFTJVIC8QNF7TEPXNQC_LHNSPJBNWMSLYQXCDY89RF60DYGS2HOUQFEMWLELQZB1FUPWAA4HIRSB4DJLMUJ',
                                               API_KEY_5__C = 'WBTVJZHLCRXQQJ2EJ-ZG7DQPNRTR7DEW4XZ8THGKG3KEDXN9D6VJRGRSLUP4FCRKMBIVX-KEOFALYFJFDRM1RCVP34QHRM2-V8QEJ8PAAA-VKTVTNEOLNOM60WA61EPZQRLAZQHRZI39J6FBSVQAAFVT6HJNO1IKGJCR7BF5QTRQQLQ', 
                                               API_KEY_6__C = 'IRS8WKCYZ5YNI_PHWG_BVGVYJU5AGA3QQD-6UFJY0FLLBKBB8OJTOZNBISIEWIPYRNBI3GUH5CN9KKOHKFONLA1YRTCCH76-BAGA1DYT6TEVG2XM1SF1KQSLXV0IDY-EJJS6AJR79_TYEJWUVPWIQA8CCVNGXR1HEHNSOMBTKMXMSCX',
                                               API_KEY_7__C = 'WR_2MYLNHNVNOQMXLFJ7FGQXZEOGYZUQVE4HFWLIWBA1WRI1U_QL7_EAISXYRWKSY-SQFBR1LSXDCZNTFPXOAHF7EQM9SRKOYKYEA_BUWLERA8T2QSKUXU2YQGO3BMQR9ASIZIFQCNESKI-YN4LBPWXMC_TXG8');
        INSERT TESTQCUSER;
        
        INSTANCECONTROLLER.ADDAPIKEY();

       	QCUSER = INSTANCESCONTROLLER.QCUSER ;
        BOOLEAN CONNECTED = INSTANCESCONTROLLER.CONNECTED ;
        SYSTEM.ASSERTEQUALS(TESTQCUSER.ID, QCUSER.ID);
        
        LIST<STRING> CHUNKS = NEW LIST<STRING>();
        CHUNKS.ADD(QCUSER.API_KEY_1__C);
        CHUNKS.ADD(QCUSER.API_KEY_2__C);
        CHUNKS.ADD(QCUSER.API_KEY_3__C);
        CHUNKS.ADD(QCUSER.API_KEY_4__C);
        CHUNKS.ADD(QCUSER.API_KEY_5__C);
        CHUNKS.ADD(QCUSER.API_KEY_6__C);        
        INSTANCESCONTROLLER.VALIDATEAPIKEY(CHUNKS);
        CHUNKS.ADD(QCUSER.API_KEY_7__C);
        INSTANCESCONTROLLER.VALIDATEAPIKEY(CHUNKS);
        

        TEST.STOPTEST();   
    } 
    
}