@ISTEST
CLASS  INSTANCEDETAILCONTROLLERTEST {
    @ISTEST
    STATIC VOID EXECUTE_SCANNOK() {

        UPSERT NEW INSTANCE__C(URL__C='URL', DESCRIPTION__C='DEC', ENVIRONMENT_TYPE__C='DEV',ID__C= '1', INSTANCE_TYPE__C='SALESFORCCE', IS_FEATURED_BANCH__C=TRUE) ID__C;

        STATICRESOURCECALLOUTMOCK MOCK = NEW STATICRESOURCECALLOUTMOCK();
        MOCK.SETSTATICRESOURCE('SCANOK');
        MOCK.SETSTATUSCODE(202);
        MOCK.SETHEADER('CONTENT-TYPE', 'APPLICATION/JSON');

        // SET THE MOCK CALLOUT MODE
        TEST.SETMOCK(HTTPCALLOUTMOCK.CLASS, MOCK);
        TEST.STARTTEST();
        INSTANCEDETAILCONTROLLER INSTANCEDETAIL = NEW INSTANCEDETAILCONTROLLER();

        INSTANCEDETAIL.ID_INSTANCE = '1';
        INSTANCEDETAIL.GIT_BRANCH = 'DEVELOP';
        INSTANCEDETAIL.GETINSTANCE();

        INSTANCEDETAIL.EXECUTE_SCANN();

        TEST.STOPTEST();
        SYSTEM.ASSERTEQUALS('SCAN LAUNCHED', INSTANCEDETAIL.MESSAGE_OUT);
        SYSTEM.ASSERTEQUALS('CONFIRM', INSTANCEDETAIL.MESSAGE_TYPE_OUT);
    }
    
    @ISTEST
    STATIC VOID EXECUTE_SCANN_FULLOK() {

        UPSERT NEW INSTANCE__C(URL__C='URL', DESCRIPTION__C='DEC', ENVIRONMENT_TYPE__C='DEV',ID__C= '1', INSTANCE_TYPE__C='SALESFORCCE', IS_FEATURED_BANCH__C=TRUE) ID__C;

        STATICRESOURCECALLOUTMOCK MOCK = NEW STATICRESOURCECALLOUTMOCK();
        MOCK.SETSTATICRESOURCE('SCANOK');
        MOCK.SETSTATUSCODE(200);
        MOCK.SETHEADER('CONTENT-TYPE', 'APPLICATION/JSON');

        // SET THE MOCK CALLOUT MODE
        TEST.SETMOCK(HTTPCALLOUTMOCK.CLASS, MOCK);
        TEST.STARTTEST();
        INSTANCEDETAILCONTROLLER INSTANCEDETAIL = NEW INSTANCEDETAILCONTROLLER();

        INSTANCEDETAIL.ID_INSTANCE = '1';
        INSTANCEDETAIL.GIT_BRANCH = 'DEVELOP';
        INSTANCEDETAIL.GETINSTANCE();
        INSTANCEDETAIL.GETSCANNS();
        INSTANCEDETAIL.GETID_INSTANCE();
        INSTANCEDETAIL.GO_BACK();
        INSTANCEDETAIL.OPENDETAIL();


        INSTANCEDETAIL.EXECUTE_SCANN_FULL();

        TEST.STOPTEST();
        SYSTEM.ASSERTEQUALS('SCAN LAUNCHED', 'SCAN LAUNCHED');
    }



    @ISTEST
    STATIC VOID UPDATE_SCANNSOK() {
        INSTANCE__C INSTANCE;
        INSTANCE__C INSTANCEE = NEW INSTANCE__C(URL__C='URL', DESCRIPTION__C='DEC', ENVIRONMENT_TYPE__C='DEV',ID__C= '1', INSTANCE_TYPE__C='SALESFORCCE', IS_FEATURED_BANCH__C=TRUE);
        UPSERT INSTANCE = INSTANCEE ID__C;
        UPSERT NEW SCANN__C(ID__C= '1',DATE__C = DATETIME.VALUEOF('2019-07-23 08:25:59'), STATE__C='RUNNING', SCAN_TYPE__C='FEATURE-BRANCH-SCAN', BRANCH_NAME__C='DEVELOP', INSTANCE__C= INSTANCE.ID) ID__C;
        QUALITYCLOUDSSETTINGS__MDT SETTINGS = CONTROLLERHELPERQC.GETSETTINGS();

        MULTISTATICRESOURCECALLOUTMOCK MULTIMOCK = NEW MULTISTATICRESOURCECALLOUTMOCK();
        MULTIMOCK.SETSTATICRESOURCE(SETTINGS.API_ENDPOINT__C + '/API/'  + SETTINGS.API_VERSION__C + '/FEATURE-BRANCH-SCAN/1','SCANOK');
        MULTIMOCK.SETSTATICRESOURCE(SETTINGS.API_ENDPOINT__C + '/API/'  + SETTINGS.API_VERSION__C + '/FEATURE-BRANCH-ISSUE?FILTER[SCAN_UUID]=1&PAGE[SIZE]=1000&PAGE[NUMBER]=1', 'ISSUELISTOK');
        MULTIMOCK.SETSTATUSCODE(200);
        MULTIMOCK.SETHEADER('CONTENT-TYPE', 'APPLICATION/JSON');

        // SET THE MULTIMOCK CALLOUT MODE
        TEST.SETMOCK(HTTPCALLOUTMOCK.CLASS, MULTIMOCK);
        TEST.STARTTEST();
        INSTANCEDETAILCONTROLLER INSTANCEDETAIL = NEW INSTANCEDETAILCONTROLLER();

        INSTANCEDETAIL.ID_INSTANCE = '1';
        INSTANCEDETAIL.ID_SCAN = '1';
        INSTANCEDETAIL.GIT_BRANCH = 'DEVELOP';

        INSTANCEDETAIL.GETINSTANCE();

        INSTANCEDETAIL.UPDATE_SCANNS();

        TEST.STOPTEST();
        SYSTEM.ASSERTEQUALS('SCAN STATUS UPDATED AND ISSUES IMPORTED', INSTANCEDETAIL.MESSAGE_OUT);
        SYSTEM.ASSERTEQUALS('CONFIRM', INSTANCEDETAIL.MESSAGE_TYPE_OUT);
    }

}